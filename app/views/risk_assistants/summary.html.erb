<% fetch_value = ->(key) { @risk_assistant.messages.where(key: key).order(:created_at).limit(1).pluck(:value).first } %>
<div class="container py-4 dashboard-view">
  <div class="d-flex flex-wrap justify-content-between align-items-start gap-3 mb-4">
    <div>
      <h1 class="h3 mb-1"><%= @risk_assistant.name %> – Resumen ejecutivo</h1>
      <p class="text-muted mb-0">Visualiza la información clave recopilada, lista para compartir o exportar.</p>
    </div>
    <div class="d-flex flex-wrap gap-2">
      <%= link_to risk_assistant_report_path(@risk_assistant), class: "btn btn-outline-primary" do %>
        <i class="bi bi-filetype-pdf" aria-hidden="true"></i> Exportar a PDF
      <% end %>
      <%= link_to risk_assistant_path(@risk_assistant), class: "btn btn-outline-secondary" do %>
        <i class="bi bi-chat-dots" aria-hidden="true"></i> Volver al chat
      <% end %>
    </div>
  </div>

  <div class="row g-3 mb-4">
    <div class="col-md-4">
      <div class="card shadow-sm" data-state="ready">
        <div class="card-body">
          <p class="text-muted text-uppercase small mb-1">Secciones</p>
          <h2 class="h4 mb-0"><%= @sections.count %></h2>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card shadow-sm" data-state="pending">
        <div class="card-body">
          <p class="text-muted text-uppercase small mb-1">Campos con datos</p>
          <h2 class="h4 mb-0"><%= @risk_assistant.messages.where.not(key: [nil, ""]).count %></h2>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card shadow-sm" data-state="alert">
        <div class="card-body">
          <p class="text-muted text-uppercase small mb-1">Archivos vinculados</p>
          <h2 class="h4 mb-0"><%= @risk_assistant.uploaded_files.count %></h2>
        </div>
      </div>
    </div>
  </div>

  <div class="accordion" id="summaryAccordion">
    <% @sections.each do |section_id, section_hash| %>
      <% section_label = section_hash[:title] %>
      <% fields = section_hash[:fields] %>
      <% total_fields = fields.reject { |f| f[:type].to_s == "subsection" }.size %>
      <% completed_fields = fields.count do |field|
           next false if field[:type].to_s == "subsection"
           value = fetch_value.call(field[:id].to_s)
           value.present?
         end %>
      <% progress_pct = total_fields.zero? ? 0 : ((completed_fields * 100.0) / total_fields).round %>
      <% badge_class = if progress_pct == 100
                         'bg-status-ready'
                       elsif progress_pct >= 50
                         'bg-status-progress'
                       else
                         'bg-status-pending'
                       end %>
      <div class="card shadow-sm border-0 mb-3" data-state="<%= progress_pct == 100 ? 'ready' : 'pending' %>">
        <div class="card-header bg-white" id="heading-<%= section_id %>">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-<%= section_id %>" aria-expanded="false" aria-controls="collapse-<%= section_id %>">
            <div class="w-100 d-flex justify-content-between align-items-center flex-wrap gap-2">
              <div>
                <h2 class="h5 mb-0"><%= section_label %></h2>
                <small class="text-muted"><%= completed_fields %>/<%= total_fields %> campos completados</small>
              </div>
              <span class="badge <%= badge_class %>"><%= progress_pct %>%</span>
            </div>
          </button>
        </div>
        <div id="collapse-<%= section_id %>" class="accordion-collapse collapse" aria-labelledby="heading-<%= section_id %>" data-bs-parent="#summaryAccordion">
          <div class="accordion-body">
            <div class="table-responsive">
              <table class="table table-hover align-middle">
                <tbody>
                  <% fields.each do |f| %>
                    <% if f[:type].to_s == "subsection" %>
                      <tr class="table-secondary">
                        <th colspan="2"><%= f[:label] %></th>
                      </tr>
                      <% next %>
                    <% end %>

                    <% key = f[:id].to_s %>
                    <% label = f[:label] %>
                    <% value = fetch_value.call(key) %>
                    <% if value.blank? && f[:type].to_s != "array_of_objects" %>
                      <tr>
                        <th class="w-50 align-middle"><%= label %></th>
                        <td><span class="badge bg-status-pending">Pendiente</span></td>
                      </tr>
                      <% next %>
                    <% end %>

                    <tr>
                      <th class="w-50 align-middle"><%= label %></th>
                      <td>
                        <% case f[:type].to_s %>
                        <% when "boolean" %>
                          <% if %w[true Sí sí SÍ].include?(value) %>
                            <span class="badge bg-status-ready">Sí</span>
                          <% else %>
                            <span class="badge bg-status-alert">No</span>
                          <% end %>
                        <% when "select" %>
                          <span class="badge bg-neutral text-dark"><%= value %></span>
                        <% when "number" %>
                          <%= number_with_delimiter(value.to_f, delimiter: ".") %>
                        <% when "file", "file_multiple" %>
                          <% msg = @risk_assistant.messages.find_by(key: key) %>
                          <% if msg&.files&.attached? %>
                            <ul class="list-unstyled mb-0">
                              <% msg.files.each do |file| %>
                                <li>
                                  <%= link_to file.filename.to_s, rails_blob_path(file, disposition: "attachment"), target: "_blank" %>
                                </li>
                              <% end %>
                            </ul>
                          <% else %>
                            <span class="text-muted">Sin archivos</span>
                          <% end %>
                        <% when "boolean_group" %>
                          <% values = value.is_a?(Array) ? value : value.to_s.split(/\s*,\s*/) %>
                          <% values.each do |val| %>
                            <span class="badge bg-status-ready me-1">✓ <%= val %></span>
                          <% end %>
                        <% when "object" %>
                          <% obj_parent = f[:id] %>
                          <% obj_fields = @flat_fields.select { |sf| sf[:parent] == obj_parent } %>
                          <div class="table-responsive">
                            <table class="table table-sm table-borderless mb-0">
                              <tbody>
                                <% obj_fields.each do |sf| %>
                                  <% if sf[:type].to_s == "subsection" %>
                                    <tr class="table-secondary">
                                      <th colspan="2"><%= sf[:label] %></th>
                                    </tr>
                                    <% next %>
                                  <% end %>
                                  <% sub_key = sf[:id].to_s %>
                                  <% sub_value = fetch_value.call(sub_key) %>
                                  <% if sub_value.blank? && sf[:type].to_s != "array_of_objects" %>
                                    <tr>
                                      <th class="w-50 align-middle"><%= sf[:label] %></th>
                                      <td><span class="badge bg-status-pending">Pendiente</span></td>
                                    </tr>
                                    <% next %>
                                  <% end %>
                                  <tr>
                                    <th class="w-50 align-middle"><%= sf[:label] %></th>
                                    <td>
                                      <% case sf[:type].to_s %>
                                      <% when "boolean" %>
                                        <% if %w[true Sí sí SÍ].include?(sub_value) %>
                                          <span class="badge bg-status-ready">Sí</span>
                                        <% else %>
                                          <span class="badge bg-status-alert">No</span>
                                        <% end %>
                                      <% when "select" %>
                                        <span class="badge bg-neutral text-dark"><%= sub_value %></span>
                                      <% when "number" %>
                                        <%= number_with_delimiter(sub_value.to_f, delimiter: ".") %>
                                      <% when "file", "file_multiple" %>
                                        <% msg = @risk_assistant.messages.find_by(key: sub_key) %>
                                        <% if msg&.files&.attached? %>
                                          <ul class="list-unstyled mb-0">
                                            <% msg.files.each do |file| %>
                                              <li>
                                                <%= link_to file.filename.to_s, rails_blob_path(file, disposition: "attachment"), target: "_blank" %>
                                              </li>
                                            <% end %>
                                          </ul>
                                        <% else %>
                                          <span class="text-muted">Sin archivos</span>
                                        <% end %>
                                      <% when "array_of_objects" %>
                                        <% array_parent = sf[:id] %>
                                        <% subfields = @flat_fields.select { |ss| ss[:parent] == array_parent }.reject { |ss| ss[:type].to_s == "subsection" } %>
                                        <% rows = @risk_assistant.messages.where("key LIKE ?", "#{array_parent}.%").order(:created_at) %>
                                        <% grouped_rows = {} %>
                                        <% rows.each do |msg| %>
                                          <% parts = msg.key.split(".") %>
                                          <% idx = parts[1] %>
                                          <% col = parts[2..].join(".") %>
                                          <% grouped_rows[idx] ||= { item_label: nil, values: {} } %>
                                          <% grouped_rows[idx][:item_label] ||= msg.item_label %>
                                          <% grouped_rows[idx][:values][col] = msg.value %>
                                        <% end %>
                                        <div class="table-responsive">
                                          <table class="table table-sm table-bordered mt-2 mb-0">
                                            <thead class="table-light">
                                              <tr>
                                                <th>Item</th>
                                                <% subfields.each do |ssf| %>
                                                  <th><%= ssf[:label] %></th>
                                                <% end %>
                                              </tr>
                                            </thead>
                                            <tbody>
                                              <% grouped_rows.each do |idx, data| %>
                                                <tr>
                                                  <th scope="row"><%= data[:item_label] || idx.to_i + 1 %></th>
                                                  <% subfields.each do |ssf| %>
                                                    <% col_id = ssf[:id].split(".").last %>
                                                    <% cell = data[:values][col_id] %>
                                                    <% if ssf[:type].to_s == "array_of_objects" %>
                                                      <td>
                                                        <% nested_parent = ssf[:id] %>
                                                        <% nested_subfields = @flat_fields.select { |nsf| nsf[:parent] == nested_parent }.reject { |nsf| nsf[:type].to_s == "subsection" } %>
                                                        <% nested_rows = @risk_assistant.messages.where("key LIKE ?", "#{array_parent}.#{idx}.#{nested_parent}.%").order(:created_at) %>
                                                        <% nested_grouped = {} %>
                                                        <% nested_rows.each do |nmsg| %>
                                                          <% nparts = nmsg.key.split(".") %>
                                                          <% nidx = nparts[3] %>
                                                          <% ncol = nparts[4..].join(".") %>
                                                          <% nested_grouped[nidx] ||= { item_label: nil, values: {} } %>
                                                          <% nested_grouped[nidx][:item_label] ||= nmsg.item_label %>
                                                          <% nested_grouped[nidx][:values][ncol] = nmsg.value %>
                                                        <% end %>
                                                        <div class="table-responsive">
                                                          <table class="table table-sm table-bordered mb-0">
                                                            <thead class="table-secondary">
                                                              <tr>
                                                                <th>Item</th>
                                                                <% nested_subfields.each do |nsf| %>
                                                                  <th><%= nsf[:label] %></th>
                                                                <% end %>
                                                              </tr>
                                                            </thead>
                                                            <tbody>
                                                              <% nested_grouped.each do |nidx, ndata| %>
                                                                <tr>
                                                                  <th scope="row"><%= ndata[:item_label] || nidx.to_i + 1 %></th>
                                                                  <% nested_subfields.each do |nsf| %>
                                                                    <% ncol_id = nsf[:id].split(".").last %>
                                                                    <td><%= ndata[:values][ncol_id] %></td>
                                                                  <% end %>
                                                                </tr>
                                                              <% end %>
                                                            </tbody>
                                                          </table>
                                                        </div>
                                                      </td>
                                                    <% else %>
                                                      <td><%= simple_format(cell.to_s) %></td>
                                                    <% end %>
                                                  <% end %>
                                                </tr>
                                              <% end %>
                                            </tbody>
                                          </table>
                                        </div>
                                      <% else %>
                                        <%= simple_format(sub_value.to_s) %>
                                      <% end %>
                                    </td>
                                  </tr>
                                <% end %>
                              </tbody>
                            </table>
                          </div>
                        <% when "array_of_objects" %>
                          <% array_parent = f[:id] %>
                          <% subfields = @flat_fields.select { |ss| ss[:parent] == array_parent }.reject { |ss| ss[:type].to_s == "subsection" } %>
                          <% rows = @risk_assistant.messages.where("key LIKE ?", "#{array_parent}.%").order(:created_at) %>
                          <% grouped_rows = {} %>
                          <% rows.each do |msg| %>
                            <% parts = msg.key.split(".") %>
                            <% idx = parts[1] %>
                            <% col = parts[2..].join(".") %>
                            <% grouped_rows[idx] ||= { item_label: nil, values: {} } %>
                            <% grouped_rows[idx][:item_label] ||= msg.item_label %>
                            <% grouped_rows[idx][:values][col] = msg.value %>
                          <% end %>
                          <div class="table-responsive">
                            <table class="table table-sm table-bordered mb-0">
                              <thead class="table-light">
                                <tr>
                                  <th>Item</th>
                                  <% subfields.each do |ssf| %>
                                    <th><%= ssf[:label] %></th>
                                  <% end %>
                                </tr>
                              </thead>
                              <tbody>
                                <% grouped_rows.each do |idx, data| %>
                                  <tr>
                                    <th scope="row"><%= data[:item_label] || idx.to_i + 1 %></th>
                                    <% subfields.each do |ssf| %>
                                      <% col_id = ssf[:id].split(".").last %>
                                      <% cell = data[:values][col_id] %>
                                      <td><%= simple_format(cell.to_s) %></td>
                                    <% end %>
                                  </tr>
                                <% end %>
                              </tbody>
                            </table>
                          </div>
                        <% else %>
                          <%= simple_format(value.to_s) %>
                        <% end %>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>